# Resume

Welcome to my resume!

The resume is available as [.html][resume.html] and [.pdf][resume.pdf].

{.page-break}
## Narrative

I am a biological scientist because I study and research on bioinformatics, genomics and computational biology.
Meaning I hold a BSc in some biological science degree but also I am a programmer.

I am a programmer because 
I like writing code just for the sake of it.

I write code in C#, Rust, and python. I can also whip up some perl scripts whenever I'm feeling like it. 

I build systems and I contribute to several open-source projects.

I love teaching!
See, for example, my YouTube channel where I make programming and software development tutorials ([YouTube][propenster-yt]), a series of videos about rust-analyzer ([YouTube][ra-yt]), or [the article about Pratt parsers][pratt].

Oh, and I love writing :-)

[resume.html]: https://propenster.github.io/resume.html
[resume.pdf]: https://propenster.github.io/resume.pdf
[propenster-yt]: https://www.youtube.com/@FaithOlusegun/videos

{.page-break}
## Contacts

: Name

  Faith Olusegun

: GitHub

  <https://github.com/propenster>

: Email

  See GitHub profile

## Core Competencies

- Building complex systems software from nothing
- Growing open source communities
- Implementing compilers, IDEs, build tools
- Rust mastery

## Education

* 2013-2018, Bachelor of Technology \
  *Federal University of Technology Akure*, Nigeria \
  *First-class honors (4.51/5.00)*


## Professional Experience

### Asset and Resource Management Holding Company

`From Apr 2023`\
<https://www.arm.com.ng>

:Software Developer

• Designed and developed software applications that have driven over USD 10 million in remittances and 
investment portfolio.
• Re-engineered a statement generation and dispatch service that saw an over 1500% performance 
improvement and time to completion reduced from over 5 days to generate and dispatch statements for 
100,000 clients to 4 hours only.
• Trained and mentored other software developers on best practices, secure coding, and API optimization 
techniques.

### Sobel.io 

`From Jun 2023`\
<https://www.sobel.io>

:Rust Developer

I am a member of the dev team for sobel.io and a contributor to some of their open-source projects including llm-chains, llm-chains-opanai, and comparator-rs

• Participated in systems and large language models research in the Sobel-Stockholm University 
partnership. Our project, "Comparator," a tool for psychotherapists, was featured on Swedish Radio.
• Fine-tuned the image classifier and emotion detector models of the comparator-rs project.
• Contributed to the company's core open source and in-house projects built in Rust, including llm-chain, llm-chain-openai, and empatik

### Parallex Bank Limited

`Mar 2022 to Apr 2023`\
<htttps://www.parallexbank.ng>

:Software Engineer

• Designed, architected, and implemented practical financial software solutions.
• Implemented the bank’s core integration to switches, third-party Fintechs, Nigeria Inter-Bank 
Settlement Scheme (NIBSS), and the Central Bank of Nigeria (CBN).
• Championed and saw to the completion of important integrations to drive the bank’s digital 
transformation program.

### Wragby Business Solutions and Technologies

`Oct 2021 to Mar 2022`\
<https://www.wragbysolutions.com>

:Senior Backend Engineering Consultant

• Designed and implemented practical software solutions.
• Designed and developed product barcoding and QR coding solutions for pharmaceuticals and 
supermarkets, installed and trained customers on the usage of the software.
• Worked with Software architects, Sys Admins, and Project Managers to develop business solutions 
using Microsoft technologies.

### Fidelity Bank PLC 

`Sep 2020 to Oct 2021`\
<https://www.fidelitybank.ng>

:Software Developer

• Worked in an Agile team of Software Developers, Built and integrated Application Programming 
Interfaces (APIs) to drive banking processes using clean code architecture.
• Built and deployed different API components to different Azure environments, IIS, and unit tested 
different components using the xUnit testing framework.
• Maintained and provided technical support for applications in production, including a visitor 
management system serving front desk officers, an SME account opening portal serving over 1 million 
businesses, and Azure API Management and delegated portals supporting the bank's flagship open API 
product.


## Open-Source Contributions and Projects 

### File Query Language (FQL)

*Overview:* FQL (File Query Language) is a simple and powerful file querying language designed to 
help you efficiently search and extract information from text files. Whether you need to analyze log 
files, parse JSON, or extract specific content from text files, FQL provides a versatile set of commands 
to simplify the process.
*Tools:* Rust, VSCode, git.
*Role:* Author and core maintainer
*Link:* https://github.com/propenster/fq

### PipenGeneX

*Overview:* pipengenex is a powerful framework designed for creating and executing Bioinformatic 
pipeline workflows. It includes a Command-Line Utility (CLI) tool for effortlessly running pipeline workflows 
and tasks defined through JSON workflow definitions. Some notable features of pipengenex include task 
parallelization and flexible workflow configuration.
*Tools:* Rust, C#, VSCode, git, Perl.
*Role:* Author and core maintainer
*Link:* https://github.com/propenster/pipengenex

### ERVCaller-rs

*Overview:* ERVCaller-rs is a rust port of the popular tool designed to accurately detect and genotype 
non-reference unfixed endogenous retroviruses (ERVs) and other transposable elements (TEs) in the 
human genome using next-generation sequencing (NGS) data. The original ERVCaller package was 
written in perl. 
*Tools:* Rust, VSCode, git, Perl.
*Role:* Author and core maintainer
*Link(s):* https://github.com/xunchen85/ERVcaller https://github.com/propenster/ERVCaller-rs

### BioBencher

*Overview:* This is a tool that benchmarks performance and CPU footprint bioinformatics and genomic 
analysis tools particularly MSA, phyllo tools using our base debigenic genomic and bioinformatic analysis 
pipeline.
*Tools:* C#, docker, git, debigenic, BEDTools, BLAST, Clustalw2, Phylip, HMMER, MUMER, QuEST, VELVET.
*Role:* Author and core maintainer
*Link(s):* https://github.com/propenster/biobencher
https://hub.docker.com/repository/docker/propenster/debigenic

### debigenic

*Overview:* is an open-source genomic and bioinformatics data analysis pipeline that runs on Debian 
Linux (Ubuntu 22.04) and contains a setup of over 50 genomic and bioinformatic exploration and 
analysis tools. It is reproducible, duplicatable, sharable, usable and extendable by anyone, any 
researcher anywhere in the world. With debigenic, you do no not need to carry an office or research 
computer anywhere, just find any PC or laptop that could run docker and you have a whole virtual 
machine (container) that has everything you need for bioinformatics at least almost every tool you 
might need. It is like you could carry your bioinformatics lab everywhere and in fact share you lab with 
anyone you want irrespective of where they are.
*Tools:* docker, linux bash shell, git.
*Role:* Author and core maintainer
*Link:* https://hub.docker.com/repository/docker/propenster/debigenic/general

### Clash

*Overview:* is a simple to use, efficient, and full-featured Command Line Argument Parser library for C# 
.NET. You can use Clash in your CLI applications to parse CommandLine Arguments to C# objects.
*Tools:* C#, Visual Studio, git
*Role:* Author and Core Maintainer
*Link:* https://github.com/propenster/Clash

### SimpleHTMLParser

*Overview:* SimpleHTMLParser is a simple to use, efficient, and full-featured HTML Document Parser for C#. 
You can parse an HTML document and retrieve any element(s) in it.
*Tools:* C#, Visual Studio, git
*Role:* Author and core maintainer
*Link:* https://github.com/propenster/simplehtmlparser

### Veal

*Overview:* I’m creating my own web development framework or microframework. It is meant to be 
faster, simpler and much easier to run anywhere than Microsoft’s ASP.NET Core. I call it a lightweight 
web development framework written in 100% C#.
*Tools:* C#, Visual Studio, git
*Role:* Author and core maintainer
*Link:* https://github.com/propenster/veal

### Selenium-rs

*Overview:* `selenium-rs` is A rust client for the Selenium webdriver (WIP). 
*Tools:* rust, cargo, rustfmt, git, selenium web driver.
*Role:* Contributor
*Link:* https://github.com/saresend/selenium-rs

### llm-chain

*Overview:* `llm-chain` is a powerful rust crate for building chains in large language models allowing you 
to summarise text and complete complex tasks. 
*Tools:* rust, cargo, rustfmt, git.
*Role:* Contributor
*Link:* https://github.com/sobelio/llm-chain

### Faker.NET

*Overview:* I created and I am maintaining a NUGET package for .NET developers to generate 
dummy/fake data for collections. 
*Tools:* C#, Github markdown, .NET Standard, NUnit.
*Role:* Author and core maintainer
*Link:* https://github.com/propenster/Faker.Net

### Sluggify-rs

*Overview:* A simple slug or clean URL generator library for Rust.
*Tools:* Rust, Github markdown, cargo, crates.io.
*Role:* Author and core maintainer
*Link:* https://github.com/propenster/sluggify-rs

### RestSharp

*Overview:* Simple REST and HTTP API Client for. NET.
*Tools:* C#, Github markdown.
*Role:* Contributor
*Link:* https://github.com/restsharp/RestSharp

### llcc94

*Overview:* Writing a compiler using Rust. 
*Tools:* rustlang, cargo, git.
*Role:* Contributor
